 //#include "stdafx.h"
#include "PQLController.h"
#include "PreProcessor.h"
#include "queryTree.h"
#include "AST.h"
#include "evaluator.h"

PQLController::PQLController() {
}

PQLController::PQLController(PKB * inputPKB) {
	pkb = inputPKB;
}

//maybe need accept 1 more argument
void PQLController::passInput(string queryInOneLine, list <string> &resultsList) {

	//while(still have queries)
	queryTree * tree = preProcessor.preProcess(queryInOneLine);
	
	eval.insertAST(pkb->getAST());
	eval.insertFollows(pkb->getFollows());
	eval.insertParent(pkb->getParent());
	eval.insertModifies(pkb->getModifies());
	eval.insertUses(pkb->getUses());
	eval.insertVarTable(pkb->getVarTable());
				

	vector<vector<string>> results = eval.evaluateQuery(tree);

	delete tree;

	for(int i=0; i<results.size(); i++){
		cout << results.at(i).at(0);
		resultsList.push_back(results.at(i).at(0));
	}		
}